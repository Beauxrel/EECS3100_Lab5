;*******************************************************************
; main.s
; Author: Logan Crawfis & Landon Jackson
; Date Created: 06/22/2021
; Last Modified: 06/22/2021
; Section Number: 046
; Instructor: ***update this***
; Lab number: 5
; Brief description of the program
; If the switch is presses, the LED toggles at 8 Hz
; Hardware connections
; PE1 is switch input (1 means pressed, 0 means not pressed)
; PE0 is LED output (1 activates external LED on protoboard)
; Overall functionality is similar to Lab 4, with six changes:
; 1) the pin to which we connect the switch is moved to PE1,
; 2) you will have to remove the PUR initialization because
; pull up is no longer needed.
; 3) the pin to which we connect the LED is moved to PE0,
; 4) the switch is changed from negative to positive logic, and
; 5) you should increase the delay so it flashes about 8 Hz.
; 6) the LED should be on when the switch is not pressed
; Operation
; 1) Make PE0 an output and make PE1 an input.
; 2) The system starts with the LED on (make PE0 =1).
; 3) Wait about 62 ms
; 4) If the switch is pressed (PE1 is 1), then toggle the LED
; once, else turn the LED on.
; 5) Steps 3 and 4 are repeated over and over
;*******************************************************************
GPIO_PORTE_DATA_R EQU 0x400243FC
GPIO_PORTE_DIR_R EQU 0x40024400
GPIO_PORTE_AFSEL_R EQU 0x40024420
GPIO_PORTE_DEN_R EQU 0x4002451C
GPIO_PORTE_AMSEL_R EQU 0x40024528
GPIO_PORTE_PCTL_R EQU 0x4002452C
SYSCTL_RCGCGPIO_R EQU 0x400FE608
PE0 EQU 0x40024004
PE1 EQU 0x40024008
 IMPORT TExaS_Init
 AREA |.text|, CODE, READONLY, ALIGN=2
 THUMB
 EXPORT Start
Start
 ; TExaS_Init sets bus clock at 80 MHz
 BL TExaS_Init ; voltmeter, scope on PD3
 ; you initialize PE1 PE0

LDR R0, =SYSCTL_RCGCGPIO_R ; set clock for PortE
MOV R1, #0x10
STR R1, [R0]
NOP
NOP
LDR R0, =GPIO_PORTE_AMSEL_R ; clear amsel for normal operation
MOV R1, #0x00
STR R1, [R0]
LDR R0, =GPIO_PORTE_DIR_R ; set PE1 as input and PE0 as output
MOV R1, #0x01
STR R1, [R0]
LDR R0, =GPIO_PORTE_AFSEL_R ; disable analog functionality
 MOV R1, #0x00
STR R1, [R0]
LDR R0, =GPIO_PORTE_DEN_R ; enable digital I/O on PE0 and 1
 MOV R1, #0x03
STR R1, [R0]
LDR R0, =GPIO_PORTE_PCTL_R ; clear PCTL for PE
 MOV R1, #0x00
STR R1, [R0]
 CPSIE I ; TExaS voltmeter, scope runs on interrupts
LDR R3, =PE0
led_on
 LDR R4, [R3] ; load PE0 data into R4
 ORR R4, R4, #0x01 ; set PE0
 STR R4, [R3] ; store data onto PE0
B loop
led_toggle
LDR R4, [R3] ; load PE0 data into R4
EOR R4, R4, #0x01 ; toggle PE0
STR R4, [R3] ; store toggled data into PE0
MOV R5, #3875 ; start the delay process
B Delay
Delay
MOVS R2, #0 ;reset count for timer
sub_loop
ADD R2, #1 ; add 1 to R2 until it hits 255
CMP R2, #255 ; after hitting 255 subtract 1 from R5
BNE sub_loop
SUB R5, #1 ; sub 1 from R5 until it hits zero
CMP R5, #0
BNE Delay ; go back until first portion of sub loop has been run 1447 times
B loop
check ; check that the led is already on
LDR R4, [R3]
CMP R4, #0x00
BEQ led_on
loop
 LDR R0, =PE1
LDR R7, [R0]
CMP R7, #0x02
BNE check ; turns on led if PE1 is not pressed
B led_toggle ;toggles led if PE1 is high
 B loop
 ALIGN ; make sure the end of this section is aligned
 END ; end of file